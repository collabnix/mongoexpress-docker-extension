export interface OpenDialogResult {
    /**
     * whether or not the dialog was canceled.
     */
    readonly canceled: boolean;
    /**
     * An array of file paths chosen by the user. If the dialog is cancelled this will be an empty array.
     */
    readonly filePaths: string[];
    /**
     * macOS only- An array matching the filePaths array of base64 encoded strings which contains security scoped bookmark data. securityScopedBookmarks must be enabled for this to be populated
     */
    readonly bookmarks?: string[];
}
/**
 * Allows to open native dialog boxes.
 */
export interface Dialog {
    /**
     * Display a native open dialog, allowing to select a file or a folder.
     *
     * ```typescript
     * ddClient.desktopUI.dialog.showOpenDialog({properties: ['openFile']});
     * ```
     * @param properties properties to specify the open dialog behaviour, see https://www.electronjs.org/docs/latest/api/dialog#dialogshowopendialogbrowserwindow-options.
     */
    showOpenDialog(dialogProperties: any): Promise<OpenDialogResult>;
}
